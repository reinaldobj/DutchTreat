{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/app.component.css","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/checkout/checkout.component.css","webpack:///./ClientApp/app/checkout/checkout.component.html","webpack:///./ClientApp/app/checkout/checkout.component.ts","webpack:///./ClientApp/app/login/login.component.html","webpack:///./ClientApp/app/login/login.component.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/app/shared/order.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/productList.component.css","webpack:///./ClientApp/app/shop/productList.component.html","webpack:///./ClientApp/app/shop/productList.component.ts","webpack:///./ClientApp/app/shop/shop.component.html","webpack:///./ClientApp/app/shop/shop.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\nimport { Cart } from './shop/cart.component';\nimport { Shop } from './shop/shop.component';\nimport { Checkout } from './checkout/checkout.component';\nimport { Login } from './login/login.component';\nimport { DataService } from './shared/dataService';\n\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\r\n\nlet routes = [\n    { path: \"\", component: Shop },\n    { path: \"checkout\", component: Checkout },\n    { path: \"login\", component: Login }\n];\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductList,\n        Cart,\n        Shop,\n        Checkout,\n        Login\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        RouterModule.forRoot(routes, {\n            useHash: true,\n            enableTracing: false,\n        })\n    ],\n    providers: [\n        DataService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n    <h3>Confirm Order</h3>\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n            <td><img src=\\\"/img/{{ o.productArtId }}.jpg\\\" alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\r\\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice|currency:'USD':true }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\\r\\n        </tr>\\r\\n    </table>\\r\\n    <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\r\\n        <table class=\\\"table table-condensed\\\">\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Subtotal</td>\\r\\n                <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Shipping</td>\\r\\n                <td class=\\\"text-right\\\">$ 0.00</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"text-right\\\">Total:</td>\\r\\n                <td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':true }}</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from \"@angular/router\";\r\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n    constructor(public data: DataService, public router: Router) {\n    }\n\n    errorMessage: string = \"\";\n\n    onCheckout() {\n        this.data.checkout()\n            .subscribe(success => {\n                if (success) {\n                    this.router.navigate([\"/\"]);\n                }\n            }, err => this.errorMessage = \"Failed to save order\");\n    }\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n        <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n        <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"username\\\">Username</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"creds.username\\\" #username=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is required!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"creds.password\\\" #password=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Username is required!</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n                <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: 'login.component.html'\r\n})\r\nexport class Login {\r\n\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    errorMessage: string = \"\";\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    };\r\n\r\n    onLogin() {\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length == 0) {\r\n                        this.router.navigate([\"/\"]);\r\n                    }\r\n                    else {\r\n                        this.router.navigate([\"checkout\"]);\r\n                    }\r\n                }\r\n            }, err => this.errorMessage = \"Failed to login\");\r\n    }\r\n}","﻿import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from \"./product\";\r\nimport * as OrderNS from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public products: Product[] = [];\r\n    public order: OrderNS.Order = new OrderNS.Order;\r\n\r\n    public loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(map((data: any[]) => {\r\n                this.products = data;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date()\r\n    }\r\n\r\n    login(creds): Observable<boolean> {\r\n        return this.http\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(map(((data: any) => {\r\n                this.token = data.token;\r\n                this.tokenExpiration = data.tokenExpiration;\r\n                return true;\r\n            })));\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.token)\r\n        })\r\n        .pipe(map((response => {\r\n            this.order = new OrderNS.Order();\r\n            return true;\r\n        })));\r\n    }\r\n\r\n    public AddToOrder(newProduct: Product) {\r\n        let item: OrderNS.OrderItem = this.order.items.find(i => i.prodctId == newProduct.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n            item = new OrderNS.OrderItem();\r\n\r\n            item.prodctId = newProduct.id;\r\n            item.productArtist = newProduct.artist;\r\n            item.productArtId = newProduct.artId;\r\n            item.productCategory = newProduct.category;\r\n            item.productSize = newProduct.size;\r\n            item.productTitle = newProduct.title;\r\n            item.unitPrice = newProduct.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order{\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    prodctId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productPrice: number;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{ data.order.items.length }}</div>\\r\\n<div>Subtotal: {{ data.order.subtotal | currency:\\\"USD\\\":true }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Product</td>\\r\\n            <td>#</td>\\r\\n            <td>$</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice | currency:\\\"USD\\\":true }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length > 0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n    constructor(private data: DataService, private router: Router) { }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        }\r\n        else {\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n}","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"product-info col-md-4 well well-sm\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-responsive\\\" [alt]=\\\"p.title\\\" />\\r\\n        <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\r\\n        <div><strong>Price</strong>: {{ p.price | currency: \\\"USD\\\":true }}</div>\\r\\n        <div><strong>Artist</strong>: {{ p.artist }}</div>\\r\\n        <div><strong>Title</strong>: {{ p.title }}</div>\\r\\n        <div><strong>Description</strong>: {{ p.artDescription }}</div>\\r\\n        <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n    </div>\\r\\n</div> \"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\nexport class ProductList implements OnInit {\r\n    constructor(private data: DataService) {\r\n    }\r\n\r\n    public products: Product[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.AddToOrder(product);\r\n    }\r\n}\r\n\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-9\\\">\\r\\n        <h3>{{ title }}</h3>\\r\\n        <product-list></product-list>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"well well-sm\\\">\\r\\n            <the-cart></the-cart>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\nexport class Shop {\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}